"""article tables

Revision ID: 5ff4f107256e
Revises:
Create Date: 2025-10-25 17:53:38.543673

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "5ff4f107256e"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "articles",
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("body", sa.String(), nullable=False),
        sa.Column("status", sa.String(), nullable=True),
        sa.Column("author_id", sa.UUID(), nullable=False),
        sa.Column("manual_likes", sa.Integer(), server_default="0", nullable=False),
        sa.Column("manual_comments", sa.Integer(), server_default="0", nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("date_created_utc", sa.DateTime(), nullable=True),
        sa.Column("date_updated_utc", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "article_analytics",
        sa.Column("likes", sa.Integer(), server_default="0", nullable=False),
        sa.Column("comments", sa.Integer(), server_default="0", nullable=False),
        sa.Column("article_id", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("date_created_utc", sa.DateTime(), nullable=True),
        sa.Column("date_updated_utc", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["article_id"], ["articles.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "article_comments",
        sa.Column("text", sa.String(), nullable=False),
        sa.Column("article_id", sa.UUID(), nullable=True),
        sa.Column("author_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("date_created_utc", sa.DateTime(), nullable=True),
        sa.Column("date_updated_utc", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["article_id"], ["articles.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("author_id", "id"),
    )
    op.create_table(
        "article_likes",
        sa.Column("text", sa.String(), nullable=False),
        sa.Column("author_id", sa.UUID(), nullable=False),
        sa.Column("article_id", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("date_created_utc", sa.DateTime(), nullable=True),
        sa.Column("date_updated_utc", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["article_id"], ["articles.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("author_id", "id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("article_likes")
    op.drop_table("article_comments")
    op.drop_table("article_analytics")
    op.drop_table("articles")
    # ### end Alembic commands ###
